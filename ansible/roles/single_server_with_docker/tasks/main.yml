- name: Create ssl dir
  file:
    dest: "{{ docker_host_cert_dir }}"
    owner: root
    group: root
    mode: 0600
    state: directory

- name: Create self-signed SSL cert
  command: >
    openssl req -new -nodes -x509
    -subj "/C=FI/ST=SouthernFinland/L=Helsinki/O=IT/CN={{ domain }}"
    -days 3650
    -extensions v3_ca
    -keyout {{ docker_host_cert_dir }}/server.key
    -out {{ docker_host_cert_dir }}/server.crt
    creates={{ docker_host_cert_dir }}/server.crt
  register: self_signed_cert

- name: Use self-signed SSL cert as a dummy file for chain
  command: cp {{ docker_host_cert_dir }}/server.crt {{ docker_host_cert_dir }}/chain.crt
  when: self_signed_cert | changed

- name: make temporary directory for image build
  command: mktemp -d
  register: mktemp

- name: prepare docker image source (templates)
  template:
    src: "docker/{{ item }}.j2"
    dest: "{{mktemp.stdout}}/{{ item }}"
  with_items:
    - ansible-sudo
    - Dockerfile
    - supervisord.conf

- name: prepare docker image source (public key)
  copy: src=~/.ssh/id_rsa.pub dest={{ mktemp.stdout }}/id_rsa.pub

- name: check or build image
  docker_image: path={{ mktemp.stdout }} name={{ image_name }} state=present

- name: remove temp image build directory
  file: name={{ mktemp.stdout }} state=absent

  # command: chcon -Rt svirt_sandbox_file_t {{ docker_host_app_root }}
- name: Allow access to mounted host directories (CentOS)
  file:
    path: "{{ item }}"
    state: directory
    setype: svirt_sandbox_file_t
    recurse: yes
  with_items:
    - "{{ docker_host_app_root }}"
    - "{{ docker_host_image_dir }}"
    - "{{ docker_host_cert_dir }}"
  when: ansible_lsb.id=="CentOS"

- name: Bring up container for redis
  docker:
    hostname: redis
    image: "{{ image_name }}"
    state: running
    restart_policy: always
    name: redis
    expose:
      - 6379
    ports:
      - "2221:22"
    volumes:
      - "{{ docker_host_app_root }}:/shared_folder/source:ro"
  when: "{{ deploy_redis | bool }}"

- name: add redis to inventory
  add_host:
    name: redis
    groups: docker,redis
    ansible_ssh_host: localhost
    ansible_ssh_port: 2221
    ansible_ssh_user: ansible
  when: "{{ deploy_redis | bool }}"

- name: Bring up ambassador container for redis (on redis host)
  docker:
    hostname: redis_ambassador
    image: svendowideit/ambassador
    state: running
    restart_policy: always
    name: redis_ambassador
    expose:
      - 6379
    ports:
      - "6379:6379"
    links:
      - "redis:redis"
    env:
      WWW_PORT_6379_TCP: tcp://redis:6379
  when: "{{ deploy_redis | bool }}"

- name: Bring up ambassador container for redis (remote host)
  docker:
    hostname: redis_ambassador
    image: svendowideit/ambassador
    state: running
    restart_policy: always
    name: redis_ambassador
    expose:
      - 6379
    ports:
      - "6379:6379"
    env:
      WWW_PORT_6379_TCP: tcp://{{ docker_api_host }}:6379
  when: "not {{ deploy_redis | bool}}"


- name: Bring up container for www
  docker:
    hostname: www
    image: "{{ image_name }}"
    state: running
    restart_policy: always
    name: www
    expose:
      - 22
      - 80
      - 443
      - 1443
    ports:
      - "2222:22"
      - "{{ docker_http_port }}:80"
      - "{{ docker_https_port }}:443"
    links:
      - "redis_ambassador:redis"
    volumes:
      - "{{ docker_host_app_root }}:/shared_folder/source:ro"
      - "{{ docker_host_cert_dir }}:/etc/apache2/ssl:ro"
  when: "{{ deploy_www | bool }}"

- name: add www to inventory
  add_host:
    name: www
    groups: docker,www
    ansible_ssh_host: localhost
    ansible_ssh_port: 2222
    ansible_ssh_user: ansible
  when: "{{ deploy_www | bool }}"

- name: Bring up ambassador container for www (on www host)
  docker:
    hostname: www_ambassador
    image: svendowideit/ambassador
    state: running
    restart_policy: always
    name: www_ambassador
    expose:
      - 1443
    ports:
      - "{{ docker_https_port_worker}}:1443"
    links:
      - "www:www"
    env:
      WWW_PORT_1443_TCP: tcp://www:1443
  when: "{{ deploy_www | bool }}"

- name: Bring up ambassador container for www (on remote host)
  docker:
    hostname: www_ambassador
    image: svendowideit/ambassador
    state: running
    restart_policy: always
    name: www_ambassador
    expose:
      - 1443
    ports:
      - "{{ docker_https_port_worker}}:1443"
    env:
      WWW_PORT_1443_TCP: tcp://{{ docker_api_host }}:1443
  when: "not {{ deploy_www | bool }}"

- name: Bring up container for proxy
  docker:
    hostname: proxy
    image: "{{ image_name }}"
    state: running
    restart_policy: always
    name: proxy
    expose:
      - 22
      - "{{ internal_https_proxy_port }}"
    ports:
      - "2224:22"
      - "{{ public_https_proxy_port }}:{{ internal_https_proxy_port }}"
    links:
      - "www_ambassador:www"
      - "redis_ambassador:redis"
    volumes:
      - "{{ docker_host_app_root }}:/shared_folder/source:ro"
      - "{{ docker_host_cert_dir }}:/etc/nginx/ssl:ro"
  when: "{{ deploy_proxy | bool }}"

- name: add proxy to inventory
  add_host:
    name: proxy
    groups: docker,proxy
    ansible_ssh_host: localhost
    ansible_ssh_port: 2224
    ansible_ssh_user: ansible
  when: "{{ deploy_proxy | bool }}"

- name: Bring up container for worker
  docker:
    hostname: worker
    image: "{{ image_name }}"
    state: running
    restart_policy: always
    name: worker
    expose:
      - 22
    ports:
      - "2223:22"
    links:
      - "www_ambassador:www"
      - "redis_ambassador:redis"
    volumes:
      - "{{ docker_host_app_root }}:/shared_folder/source:ro"
      - "{{ docker_host_m2m_credentials_dir }}:{{ application_m2m_credentials_dir }}:ro"
      - "{{ docker_host_image_dir }}:/images:ro"
  when: "{{ deploy_worker | bool }}"

- name: add worker to inventory
  add_host:
    name: worker
    groups: docker,worker
    ansible_ssh_host: localhost
    ansible_ssh_port: 2223
    ansible_ssh_user: ansible
  when: "{{ deploy_worker | bool }}"

- name: "Wait a bit for sshd to come up"
  pause: seconds=5
