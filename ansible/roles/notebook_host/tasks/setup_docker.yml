- name: Install docker
  yum: name=docker state=present
  when: ansible_lsb.id=="CentOS" and ansible_lsb.major_release=="7"

- name: Copy the server key to the host
  copy:
    src={{ runtime_path }}/server_key.pem
    dest=/etc/docker/server_key.pem
    mode=0400
  notify: restart docker
  when: enable_docker_ssl

- name: Copy the server cert to the host
  copy:
    src={{ runtime_path }}/server_cert.pem
    dest=/etc/docker/server_cert.pem
    mode=0400
  notify: restart docker
  when: enable_docker_ssl

- name: Copy the CA certificate to the host
  copy:
    src={{ runtime_path }}/ca_cert.pem
    dest=/etc/docker/ca_cert.pem
    mode=0400
  notify: restart docker
  when: enable_docker_ssl

- name: Install iptables service
  yum: name=iptables-services state=present
  when: ansible_lsb.id=="CentOS" and ansible_lsb.major_release=="7"

- name: Enable iptables service
  service: name=iptables state=started enabled=yes
  when: ansible_lsb.id=="CentOS"

- name: Iptables rules to block access to the host from containers
  template:
    src=etc/sysconfig/iptables.j2
    dest=/etc/sysconfig/iptables
    backup=True
  notify:
    - restart iptables
  when: ansible_lsb.id=="CentOS" and ansible_lsb.major_release=="7"

- name: Upload custom docker configuration
  template:
    src=etc/sysconfig/{{ item }}.j2
    dest=/etc/sysconfig/{{ item }}
    backup=True
  with_items:
    - docker
    - docker-network
  notify: restart docker
  when: ansible_lsb.id=="CentOS" and ansible_lsb.major_release=="7"

- name: Enable and start docker service
  service: name=docker state=started enabled=yes
  when: ansible_lsb.id=="CentOS" and ansible_lsb.major_release=="7"
